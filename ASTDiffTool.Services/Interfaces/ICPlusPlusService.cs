using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ASTDiffTool.Services.Interfaces
{
    /// <summary>
    /// Interface defining services for interacting with C++ tools, including AST dump and comparison tools.
    /// Provides functionality to run AST dump and AST comparison processes.
    /// </summary>
    public interface ICPlusPlusService
    {
        /// <summary>
        /// Gets or sets the path to the project result. 
        /// This path is generated and updated after running the AST dump or comparison tools.
        /// </summary>
        public string ProjectResultPath { get; set; }

        /// <summary>
        /// Runs the AST Dump Tool on the specified project, using two different C++ standards.
        /// Generates Abstract Syntax Trees (AST) for comparison purposes.
        /// </summary>
        /// <param name="compilationDatabasePath">
        /// Path to the compilation database file. This file contains information about how the source files should be compiled.
        /// </param>
        /// <param name="mainPath">Path to the main C++ source file for the project.</param>
        /// <param name="projectName">Name of the project for which the AST is being dumped.</param>
        /// <param name="firstStandard">The first C++ standard to be used (e.g., "c++11").</param>
        /// <param name="secondStandard">The second C++ standard to be used (e.g., "c++17").</param>
        /// <returns>
        /// True if the AST Dump Tool ran successfully for both standards; otherwise, false.
        /// </returns>
        bool RunASTDumpTool(string compilationDatabasePath, string mainPath, string projectName, string firstStandard, string secondStandard);

        /// <summary>
        /// Runs the AST Tree Comparer Tool to compare the results of AST dumps generated by different C++ standards.
        /// </summary>
        /// <param name="firstStandard">The path to the first C++ standard's AST</param>
        /// <param name="secondStandard">The  path to the second C++ standard's AST</param>
        /// <returns>
        /// True if the AST Tree Comparer ran successfully; otherwise, false.
        /// </returns>
        bool RunComparerTool(string firstStandrd, string secondStandrd);
    }
}